
.drawer {
    display: grid;
    height: 100vh;
    height: 100dvh;
    overflow: hidden;
    width: 100%
}

.drawer.drawer-end {
    direction: rtl
}

.drawer.drawer-end>* {
    direction: ltr
}

.drawer.drawer-end>.drawer-toggle~.drawer-side>.drawer-overlay+* {
    --tw-translate-x: 100%;
    justify-self: end
}

.drawer.drawer-end>.drawer-toggle:checked~.drawer-side>.drawer-overlay+*,
.drawer.drawer-end>.drawer-toggle~.drawer-side>.drawer-overlay+* {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.drawer.drawer-end>.drawer-toggle:checked~.drawer-side>.drawer-overlay+* {
    --tw-translate-x: 0px
}

[dir=rtl] .drawer.drawer-end>.drawer-toggle~.drawer-side>.drawer-overlay+* {
    --tw-translate-x: -100%
}

[dir=rtl] .drawer.drawer-end>.drawer-toggle:checked~.drawer-side>.drawer-overlay+* {
    --tw-translate-x: 0px
}

[dir=rtl] .drawer.drawer-end>.drawer-toggle:checked~.drawer-content {
    --tw-translate-x: .5rem
}

.dropdown {
    display: inline-block;
    position: relative
}

.dropdown>:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.dropdown .dropdown-content {
    --tw-scale-x: .95;
    --tw-scale-y: .95;
    opacity: 0;
    position: absolute;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform-origin: top;
    transition-duration: .2s;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    visibility: hidden;
    z-index: 7
}

.dropdown-end .dropdown-content {
    right: 0
}

.dropdown-left .dropdown-content {
    bottom: auto;
    right: 100%;
    top: 0;
    transform-origin: right
}

.dropdown-right .dropdown-content {
    bottom: auto;
    left: 100%;
    top: 0;
    transform-origin: left
}

.dropdown-top .dropdown-content {
    bottom: 100%;
    top: auto;
    transform-origin: bottom
}

.dropdown-end.dropdown-left .dropdown-content,
.dropdown-end.dropdown-right .dropdown-content {
    bottom: 0;
    top: auto
}

.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown.dropdown-open .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:not(.dropdown-hover):focus-within .dropdown-content {
    opacity: 1;
    visibility: visible
}

.footer {
    -moz-column-gap: 1rem;
    column-gap: 1rem;
    font-size: .875rem;
    grid-auto-flow: row;
    line-height: 1.25rem;
    row-gap: 2.5rem;
    width: 100%
}

.footer,
.footer>* {
    display: grid;
    place-items: start
}

.footer>* {
    gap: .5rem
}

@media(min-width: 48rem) {
    .footer {
        grid-auto-flow: column
    }

    .footer-center {
        grid-auto-flow: row dense
    }
}

.form-control {
    flex-direction: column
}

.form-control,
.label {
    display: flex
}

.label {
    align-items: center;
    justify-content: space-between;
    padding: .5rem .25rem;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none
}

.hero {
    background-position: 50%;
    background-size: cover;
    display: grid;
    place-items: center;
    width: 100%
}

.hero-overlay,
.hero>* {
    grid-column-start: 1;
    grid-row-start: 1
}

.hero-overlay {
    --tw-bg-opacity: .5;
    background-color: hsl(var(--n)/var(--tw-bg-opacity));
    height: 100%;
    width: 100%
}

.input {
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1)/var(--tw-bg-opacity));
    border-color: hsl(var(--bc)/var(--tw-border-opacity));
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    flex-shrink: 1;
    font-size: 1rem;
    height: 3rem;
    line-height: 2;
    line-height: 1.5rem;
    padding-left: 1rem;
    padding-right: 1rem;
    transition-duration: .2s;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1)
}

.input-group {
    align-items: stretch;
    display: flex;
    width: 100%
}

.input-group>.input {
    isolation: isolate
}

.input-group>*,
.input-group>.input {
    border-radius: 0
}

.input-group :where(span) {
    --tw-bg-opacity: 1;
    align-items: center;
    background-color: hsl(var(--b3, var(--b2))/var(--tw-bg-opacity));
    display: flex;
    padding-left: 1rem;
    padding-right: 1rem
}

.input-group :first-child {
    border-bottom-left-radius: var(--rounded-btn, .5rem);
    border-bottom-right-radius: 0;
    border-top-left-radius: var(--rounded-btn, .5rem);
    border-top-right-radius: 0
}

.input-group :last-child {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, .5rem);
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, .5rem)
}

.link {
    cursor: pointer;
    text-decoration-line: underline
}

.link-hover {
    text-decoration-line: none
}

.link-hover:hover {
    text-decoration-line: underline
}

.mask {
    -webkit-mask-position: center;
    mask-position: center;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: contain;
    mask-size: contain
}

.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap
}

.menu.horizontal {
    display: inline-flex;
    flex-direction: row
}

.menu.horizontal :where(li) {
    flex-direction: row
}

.menu :where(li) {
    align-items: stretch;
    display: flex;
    flex-direction: column;
    flex-shrink: 0;
    flex-wrap: wrap;
    position: relative
}

.menu :where(li:not(.menu-title))>:where(:not(ul)) {
    display: flex
}

.menu :where(li:not(.disabled):not(.menu-title))>:where(:not(ul)) {
    align-items: center;
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none
}

.menu>:where(li>:not(ul):focus) {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.menu>:where(li.disabled>:not(ul):focus) {
    cursor: auto
}

.menu>:where(li) :where(ul) {
    align-items: stretch;
    display: flex;
    flex-direction: column
}

.menu>:where(li)>:where(ul) {
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    display: none;
    left: 100%;
    position: absolute;
    top: auto
}

.menu>:where(li:hover)>:where(ul) {
    display: flex
}

.menu>:where(li:focus)>:where(ul) {
    display: flex
}

.modal {
    --tw-bg-opacity: .4;
    background-color: hsl(var(--nf, var(--n))/var(--tw-bg-opacity));
    bottom: 0;
    display: flex;
    justify-content: center;
    left: 0;
    opacity: 0;
    overflow-y: hidden;
    overscroll-behavior: contain;
    pointer-events: none;
    position: fixed;
    right: 0;
    top: 0;
    transition-duration: .2s;
    transition-property: transform, opacity;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    visibility: hidden;
    z-index: 8
}

:where(.modal) {
    align-items: center
}

.modal-box {
    --tw-bg-opacity: 1;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    background-color: hsl(var(--b1)/var(--tw-bg-opacity));
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, .25);
    max-height: calc(100vh - 5em);
    max-width: 32rem;
    overflow-y: auto;
    overscroll-behavior: contain;
    padding: 1.5rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-duration: .2s;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    width: 91.666667%
}

.modal-open,
.modal-toggle:checked+.modal,
.modal:target {
    opacity: 1;
    pointer-events: auto;
    visibility: visible
}

.modal-action {
    display: flex;
    justify-content: flex-end;
    margin-top: 1.5rem
}

.modal-toggle {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 0;
    opacity: 0;
    position: fixed;
    width: 0
}

.navbar {
    align-items: center;
    display: flex;
    min-height: 4rem;
    padding: var(--navbar-padding, .5rem);
    width: 100%
}

:where(.navbar>*) {
    align-items: center;
    display: inline-flex
}

.navbar-start {
    justify-content: flex-start;
    width: 50%
}

.navbar-center {
    flex-shrink: 0
}

.navbar-end {
    justify-content: flex-end;
    width: 50%
}

.table {
    position: relative;
    text-align: left
}

.table th:first-child {
    left: 0;
    position: sticky;
    position: -webkit-sticky;
    z-index: 3
}

.toast {
    display: flex;
    flex-direction: column;
    gap: .5rem;
    min-width: -moz-fit-content;
    min-width: fit-content;
    padding: 1rem;
    position: fixed
}

.toggle {
    --chkbg: hsla(var(--bc)/0.2);
    --handleoffset: 1.5rem;
    --tw-border-opacity: .2;
    --tw-bg-opacity: .2;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: hsl(var(--bc)/var(--tw-bg-opacity));
    border-color: hsl(var(--bc)/var(--tw-border-opacity));
    border-radius: var(--rounded-badge, 1.9rem);
    border-width: 1px;
    box-shadow: calc(var(--handleoffset)*-1) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset;
    cursor: pointer;
    flex-shrink: 0;
    height: 1.5rem;
    transition-duration: .3s;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition: background, box-shadow var(--animation-input, .2s) ease-in-out;
    width: 3rem
}

.alert-info {
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--in)/var(--tw-bg-opacity));
    color: hsl(var(--inc, var(--nc))/var(--tw-text-opacity))
}

.avatar-group .avatar {
    --tw-border-opacity: 1;
    border-color: hsl(var(--b1)/var(--tw-border-opacity));
    border-radius: 9999px;
    border-width: 4px;
    overflow: hidden
}

.btn-outline .badge {
    --tw-border-opacity: 1;
    --tw-text-opacity: 1;
    border-color: hsl(var(--nf, var(--n))/var(--tw-border-opacity));
    color: hsl(var(--nc)/var(--tw-text-opacity))
}

.btn-outline.btn-primary .badge {
    background-color: hsl(var(--p)/var(--tw-bg-opacity));
    border-color: hsl(var(--p)/var(--tw-border-opacity));
    color: hsl(var(--pc)/var(--tw-text-opacity))
}

.btn-outline.btn-primary .badge,
.btn-outline.btn-secondary .badge {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1
}

.btn-outline.btn-secondary .badge {
    background-color: hsl(var(--s)/var(--tw-bg-opacity));
    border-color: hsl(var(--s)/var(--tw-border-opacity));
    color: hsl(var(--sc)/var(--tw-text-opacity))
}

.btn-outline.btn-accent .badge {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--a)/var(--tw-bg-opacity));
    border-color: hsl(var(--a)/var(--tw-border-opacity));
    color: hsl(var(--ac)/var(--tw-text-opacity))
}

.btn-outline .badge.outline {
    --tw-border-opacity: 1;
    background-color: transparent;
    border-color: hsl(var(--nf, var(--n))/var(--tw-border-opacity))
}

.btn-outline.btn-primary .badge-outline {
    border-color: hsl(var(--p)/var(--tw-border-opacity));
    color: hsl(var(--p)/var(--tw-text-opacity))
}

.btn-outline.btn-primary .badge-outline,
.btn-outline.btn-secondary .badge-outline {
    --tw-border-opacity: 1;
    --tw-text-opacity: 1;
    background-color: transparent
}

.btn-outline.btn-secondary .badge-outline {
    border-color: hsl(var(--s)/var(--tw-border-opacity));
    color: hsl(var(--s)/var(--tw-text-opacity))
}

.btn-outline.btn-accent .badge-outline {
    border-color: hsl(var(--a)/var(--tw-border-opacity));
    color: hsl(var(--a)/var(--tw-text-opacity))
}

.btn-outline.btn-accent .badge-outline,
.btn-outline.btn-info .badge-outline {
    --tw-border-opacity: 1;
    --tw-text-opacity: 1;
    background-color: transparent
}

.btn-outline.btn-info .badge-outline {
    border-color: hsl(var(--in)/var(--tw-border-opacity));
    color: hsl(var(--in)/var(--tw-text-opacity))
}

.btn-outline.btn-success .badge-outline {
    border-color: hsl(var(--su)/var(--tw-border-opacity));
    color: hsl(var(--su)/var(--tw-text-opacity))
}

.btn-outline.btn-success .badge-outline,
.btn-outline.btn-warning .badge-outline {
    --tw-border-opacity: 1;
    --tw-text-opacity: 1;
    background-color: transparent
}

.btn-outline.btn-warning .badge-outline {
    border-color: hsl(var(--wa)/var(--tw-border-opacity));
    color: hsl(var(--wa)/var(--tw-text-opacity))
}

.btn-outline.btn-error .badge-outline {
    --tw-border-opacity: 1;
    --tw-text-opacity: 1;
    background-color: transparent;
    border-color: hsl(var(--er)/var(--tw-border-opacity));
    color: hsl(var(--er)/var(--tw-text-opacity))
}

.btn-outline:hover .badge {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--b2, var(--b1))/var(--tw-bg-opacity));
    color: hsl(var(--bc)/var(--tw-text-opacity))
}

.btn-outline:hover .badge,
.btn-outline:hover .badge.outline {
    border-color: hsl(var(--b2, var(--b1))/var(--tw-border-opacity))
}

.btn-outline:hover .badge.outline {
    --tw-border-opacity: 1;
    --tw-text-opacity: 1;
    color: hsl(var(--nc)/var(--tw-text-opacity))
}

.btn-outline.btn-primary:hover .badge {
    background-color: hsl(var(--pc)/var(--tw-bg-opacity));
    color: hsl(var(--p)/var(--tw-text-opacity))
}

.btn-outline.btn-primary:hover .badge,
.btn-outline.btn-primary:hover .badge.outline {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    border-color: hsl(var(--pc)/var(--tw-border-opacity))
}

.btn-outline.btn-primary:hover .badge.outline {
    background-color: hsl(var(--pf, var(--p))/var(--tw-bg-opacity));
    color: hsl(var(--pc)/var(--tw-text-opacity))
}

.btn-outline.btn-secondary:hover .badge {
    background-color: hsl(var(--sc)/var(--tw-bg-opacity));
    color: hsl(var(--s)/var(--tw-text-opacity))
}

.btn-outline.btn-secondary:hover .badge,
.btn-outline.btn-secondary:hover .badge.outline {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    border-color: hsl(var(--sc)/var(--tw-border-opacity))
}

.btn-outline.btn-secondary:hover .badge.outline {
    background-color: hsl(var(--sf, var(--s))/var(--tw-bg-opacity));
    color: hsl(var(--sc)/var(--tw-text-opacity))
}

.btn-outline.btn-accent:hover .badge {
    background-color: hsl(var(--ac)/var(--tw-bg-opacity));
    color: hsl(var(--a)/var(--tw-text-opacity))
}

.btn-outline.btn-accent:hover .badge,
.btn-outline.btn-accent:hover .badge.outline {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    border-color: hsl(var(--ac)/var(--tw-border-opacity))
}

.btn-outline.btn-accent:hover .badge.outline {
    background-color: hsl(var(--af, var(--a))/var(--tw-bg-opacity));
    color: hsl(var(--ac)/var(--tw-text-opacity))
}

.btm-nav>:where(.active) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1)/var(--tw-bg-opacity));
    border-top-width: 2px
}

.btm-nav>* .label {
    font-size: 1rem;
    line-height: 1.5rem
}

.breadcrumbs>ul>li>a:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.breadcrumbs>ul>li>a:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}

.breadcrumbs>ul>li+:before {
    --tw-rotate: 45deg;
    background-color: transparent;
    border-right: 1px solid;
    border-top: 1px solid;
    content: "";
    display: block;
    height: .375rem;
    margin-left: .5rem;
    margin-right: .75rem;
    opacity: .4;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    width: .375rem
}

[dir=rtl] .breadcrumbs>ul>li+:before {
    --tw-rotate: -45deg
}

.btn:active:focus,
.btn:active:hover {
    animation: none;
    transform: scale(var(--btn-focus-scale, .95))
}

.btn-active,
.btn:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--nf, var(--n))/var(--tw-bg-opacity));
    border-color: hsl(var(--nf, var(--n))/var(--tw-border-opacity))
}

.btn:focus-visible {
    outline: 2px solid hsl(var(--nf));
    outline-offset: 2px
}

.btn-primary {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--p)/var(--tw-bg-opacity));
    border-color: hsl(var(--p)/var(--tw-border-opacity));
    color: hsl(var(--pc)/var(--tw-text-opacity))
}

.btn-primary.btn-active,
.btn-primary:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pf, var(--p))/var(--tw-bg-opacity));
    border-color: hsl(var(--pf, var(--p))/var(--tw-border-opacity))
}

.btn-primary:focus-visible {
    outline: 2px solid hsl(var(--p))
}

.btn.glass.btn-active,
.btn.glass:hover {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%
}

.btn.glass:focus-visible {
    outline: 2px solid currentColor
}

.btn-ghost {
    background-color: transparent;
    border-color: transparent;
    border-width: 1px;
    color: currentColor
}

.btn-ghost.btn-active,
.btn-ghost:hover {
    --tw-border-opacity: 0;
    --tw-bg-opacity: .2;
    background-color: hsl(var(--bc)/var(--tw-bg-opacity))
}

.btn-ghost:focus-visible {
    outline: 2px solid currentColor
}

.btn-outline {
    --tw-text-opacity: 1;
    background-color: transparent;
    border-color: currentColor;
    color: hsl(var(--bc)/var(--tw-text-opacity))
}

.btn-outline:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--bc)/var(--tw-bg-opacity));
    border-color: hsl(var(--bc)/var(--tw-border-opacity));
    color: hsl(var(--b1)/var(--tw-text-opacity))
}

.btn-outline.btn-primary {
    --tw-text-opacity: 1;
    color: hsl(var(--p)/var(--tw-text-opacity))
}

.btn-outline.btn-primary:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--pf, var(--p))/var(--tw-bg-opacity));
    border-color: hsl(var(--pf, var(--p))/var(--tw-border-opacity));
    color: hsl(var(--pc)/var(--tw-text-opacity))
}

.btn-outline.btn-secondary {
    --tw-text-opacity: 1;
    color: hsl(var(--s)/var(--tw-text-opacity))
}

.btn-outline.btn-secondary:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--sf, var(--s))/var(--tw-bg-opacity));
    border-color: hsl(var(--sf, var(--s))/var(--tw-border-opacity));
    color: hsl(var(--sc)/var(--tw-text-opacity))
}

.btn-outline.btn-accent {
    --tw-text-opacity: 1;
    color: hsl(var(--a)/var(--tw-text-opacity))
}

.btn-outline.btn-accent:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--af, var(--a))/var(--tw-bg-opacity));
    border-color: hsl(var(--af, var(--a))/var(--tw-border-opacity));
    color: hsl(var(--ac)/var(--tw-text-opacity))
}

.btn-outline.btn-success {
    --tw-text-opacity: 1;
    color: hsl(var(--su)/var(--tw-text-opacity))
}

.btn-outline.btn-success:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--su)/var(--tw-bg-opacity));
    border-color: hsl(var(--su)/var(--tw-border-opacity));
    color: hsl(var(--suc, var(--nc))/var(--tw-text-opacity))
}

.btn-outline.btn-info {
    --tw-text-opacity: 1;
    color: hsl(var(--in)/var(--tw-text-opacity))
}

.btn-outline.btn-info:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--in)/var(--tw-bg-opacity));
    border-color: hsl(var(--in)/var(--tw-border-opacity));
    color: hsl(var(--inc, var(--nc))/var(--tw-text-opacity))
}

.btn-outline.btn-warning {
    --tw-text-opacity: 1;
    color: hsl(var(--wa)/var(--tw-text-opacity))
}

.btn-outline.btn-warning:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--wa)/var(--tw-bg-opacity));
    border-color: hsl(var(--wa)/var(--tw-border-opacity));
    color: hsl(var(--wac, var(--nc))/var(--tw-text-opacity))
}

.btn-outline.btn-error {
    --tw-text-opacity: 1;
    color: hsl(var(--er)/var(--tw-text-opacity))
}

.btn-outline.btn-error:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--er)/var(--tw-bg-opacity));
    border-color: hsl(var(--er)/var(--tw-border-opacity));
    color: hsl(var(--erc, var(--nc))/var(--tw-text-opacity))
}

.btn-disabled,
.btn-disabled:hover,
.btn[disabled],
.btn[disabled]:hover {
    --tw-border-opacity: 0;
    --tw-bg-opacity: .2;
    --tw-text-opacity: .2;
    background-color: hsl(var(--n)/var(--tw-bg-opacity));
    color: hsl(var(--bc)/var(--tw-text-opacity))
}

.btn.loading.btn-circle:before,
.btn.loading.btn-square:before {
    margin-right: 0
}

.btn.loading.btn-lg:before,
.btn.loading.btn-xl:before {
    height: 1.25rem;
    width: 1.25rem
}

.btn.loading.btn-sm:before,
.btn.loading.btn-xs:before {
    height: .75rem;
    width: .75rem
}

.btn-group>.btn-active,
.btn-group>input[type=radio]:checked.btn {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--p)/var(--tw-bg-opacity));
    border-color: hsl(var(--p)/var(--tw-border-opacity));
    color: hsl(var(--pc)/var(--tw-text-opacity))
}

.btn-group>.btn-active:focus-visible,
.btn-group>input[type=radio]:checked.btn:focus-visible {
    outline: 2px solid hsl(var(--p))
}

@keyframes b {
    0% {
        transform: scale(var(--btn-focus-scale, .95))
    }

    40% {
        transform: scale(1.02)
    }

    to {
        transform: scale(1)
    }
}

.card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}

.card.bordered {
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2, var(--b1))/var(--tw-border-opacity));
    border-width: 1px
}

.card.compact .card-body {
    font-size: .875rem;
    line-height: 1.25rem;
    padding: 1rem
}


.checkbox:focus-visible {
    outline: 2px solid hsl(var(--bc));
    outline-offset: 2px
}

.checkbox:checked,
.checkbox[aria-checked=true],
.checkbox[checked=true] {
    --tw-bg-opacity: 1;
    animation: c var(--animation-input, .2s) ease-in-out;
    background-color: hsl(var(--bc)/var(--tw-bg-opacity));
    background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 65.99%), linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%), linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%), linear-gradient(45deg, hsl(var(--chkbg)) 30%, hsl(var(--chkfg)) 30.99%, hsl(var(--chkfg)) 40%, transparent 40.99%), linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
    background-repeat: no-repeat
}

.checkbox:indeterminate {
    --tw-bg-opacity: 1;
    animation: c var(--animation-input, .2s) ease-in-out;
    background-color: hsl(var(--bc)/var(--tw-bg-opacity));
    background-image: linear-gradient(90deg, transparent 80%, hsl(var(--chkbg)) 80%), linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%), linear-gradient(0deg, hsl(var(--chkbg)) 43%, hsl(var(--chkfg)) 43%, hsl(var(--chkfg)) 57%, hsl(var(--chkbg)) 57%);
    background-repeat: no-repeat
}

.checkbox:disabled {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc)/var(--tw-bg-opacity));
    border-color: transparent;
    cursor: not-allowed;
    opacity: .2
}

@keyframes c {
    0% {
        background-position-y: 5px
    }

    50% {
        background-position-y: -2px
    }

    to {
        background-position-y: 0
    }
}

body[dir=rtl] .checkbox {
    --chkbg: var(--bc);
    --chkfg: var(--b1)
}

body[dir=rtl] .checkbox:checked,
body[dir=rtl] .checkbox[aria-checked=true],
body[dir=rtl] .checkbox[checked=true] {
    background-image: linear-gradient(45deg, transparent 65%, hsl(var(--chkbg)) 65.99%), linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%), linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%), linear-gradient(-45deg, hsl(var(--chkbg)) 30%, hsl(var(--chkfg)) 30.99%, hsl(var(--chkfg)) 40%, transparent 40.99%), linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%)
}

.collapse:focus-visible {
    outline: 2px solid hsl(var(--nf));
    outline-offset: 2px
}

.collapse:not(.collapse-open):not(.collapse-close) .collapse-title,
.collapse:not(.collapse-open):not(.collapse-close) input[type=checkbox] {
    cursor: pointer
}

.collapse:focus:not(.collapse-open):not(.collapse-close) .collapse-title {
    cursor: unset
}

:where(.collapse>input[type=checkbox]) {
    z-index: 1
}

.collapse-title,
:where(.collapse>input[type=checkbox]) {
    min-height: 3.75rem;
    padding: 1rem 3rem 1rem 1rem;
    transition: background-color .2s ease-in-out;
    width: 100%
}

.collapse-open :where(.collapse-content),
.collapse:focus:not(.collapse-close) :where(.collapse-content),
.collapse:not(.collapse-close) :where(input[type=checkbox]:checked~.collapse-content) {
    padding-bottom: 1rem;
    transition: padding .2s ease-in-out, background-color .2s ease-in-out
}

.drawer.drawer-end>.drawer-toggle:checked~.drawer-content {
    --tw-translate-x: -.5rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-primary {
    outline: 2px solid hsl(var(--p))
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-ghost {
    outline: 2px solid currentColor
}

.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown.dropdown-open .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.footer-title {
    font-weight: 700;
    margin-bottom: .5rem;
    opacity: .5;
    text-transform: uppercase
}

.label a:hover {
    --tw-text-opacity: 1;
    color: hsl(var(--bc)/var(--tw-text-opacity))
}

.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em
}

.input-bordered {
    --tw-border-opacity: .2
}

.input:focus {
    outline: 2px solid hsla(var(--bc)/.2);
    outline-offset: 2px
}

.input-disabled,
.input[disabled] {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: .2;
    background-color: hsl(var(--b2, var(--b1))/var(--tw-bg-opacity));
    border-color: hsl(var(--b2, var(--b1))/var(--tw-border-opacity));
    cursor: not-allowed
}

.input-disabled::-moz-placeholder,
.input[disabled]::-moz-placeholder {
    --tw-placeholder-opacity: .2;
    color: hsl(var(--bc)/var(--tw-placeholder-opacity))
}

.input-disabled::placeholder,
.input[disabled]::placeholder {
    --tw-placeholder-opacity: .2;
    color: hsl(var(--bc)/var(--tw-placeholder-opacity))
}

.link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}

.mask-squircle {
    -webkit-mask-image: url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMjAwJyBoZWlnaHQ9JzIwMCcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJz48cGF0aCBkPSdNMTAwIDBDMjAgMCAwIDIwIDAgMTAwczIwIDEwMCAxMDAgMTAwIDEwMC0yMCAxMDAtMTAwUzE4MCAwIDEwMCAwWicvPjwvc3ZnPg==);
    mask-image: url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMjAwJyBoZWlnaHQ9JzIwMCcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJz48cGF0aCBkPSdNMTAwIDBDMjAgMCAwIDIwIDAgMTAwczIwIDEwMCAxMDAgMTAwIDEwMC0yMCAxMDAtMTAwUzE4MCAwIDEwMCAwWicvPjwvc3ZnPg==)
}

.menu.horizontal li.bordered>a,
.menu.horizontal li.bordered>button,
.menu.horizontal li.bordered>span {
    --tw-border-opacity: 1;
    border-bottom-width: 4px;
    border-color: hsl(var(--p)/var(--tw-border-opacity));
    border-left-width: 0
}

.menu[class*=" p-"] li>*,
.menu[class^=p-] li>* {
    border-radius: var(--rounded-btn, .5rem)
}

.menu :where(li.bordered>*) {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p)/var(--tw-border-opacity));
    border-left-width: 4px
}

.menu :where(li)>:where(:not(ul)) {
    color: currentColor;
    gap: .75rem;
    padding: .75rem 1rem
}

.menu :where(li:not(.menu-title):not(:empty))>:where(:not(ul):focus),
.menu :where(li:not(.menu-title):not(:empty))>:where(:not(ul):hover) {
    --tw-bg-opacity: .1;
    background-color: hsl(var(--bc)/var(--tw-bg-opacity))
}

.menu :where(li:not(.menu-title):not(:empty))>:where(:not(ul).active),
.menu :where(li:not(.menu-title):not(:empty))>:where(:not(ul):active) {
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: hsl(var(--p)/var(--tw-bg-opacity));
    color: hsl(var(--pc)/var(--tw-text-opacity))
}

.menu :where(li:empty) {
    --tw-bg-opacity: .1;
    background-color: hsl(var(--bc)/var(--tw-bg-opacity));
    height: 1px;
    margin: .5rem 1rem
}

.menu li.disabled>* {
    --tw-text-opacity: .2;
    color: hsl(var(--bc)/var(--tw-text-opacity));
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none
}

.menu li.disabled>:hover {
    background-color: transparent
}

.menu li.hover-bordered a {
    border-color: transparent;
    border-left-width: 4px
}

.menu li.hover-bordered a:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p)/var(--tw-border-opacity))
}

.menu.compact li>a,
.menu.compact li>span {
    font-size: .875rem;
    line-height: 1.25rem;
    padding-bottom: .5rem;
    padding-top: .5rem
}

.menu .menu-title>* {
    --tw-text-opacity: .4;
    color: hsl(var(--bc)/var(--tw-text-opacity));
    font-size: .75rem;
    font-weight: 700;
    line-height: 1rem;
    padding-bottom: .25rem;
    padding-top: .25rem
}

.menu :where(li:not(.disabled))>:where(:not(ul)) {
    outline: 2px solid transparent;
    outline-offset: 2px;
    transition-duration: .2s;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1)
}

.menu>:where(li:first-child) {
    border-bottom-left-radius: unset;
    border-bottom-right-radius: unset;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit
}

.menu>:where(li:first-child)>:where(:not(ul)) {
    border-bottom-left-radius: unset;
    border-bottom-right-radius: unset;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit
}

.menu>:where(li:last-child) {
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit;
    border-top-left-radius: unset;
    border-top-right-radius: unset
}

.menu>:where(li:last-child)>:where(:not(ul)) {
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit;
    border-top-left-radius: unset;
    border-top-right-radius: unset
}

.menu>:where(li)>:where(ul) :where(li) {
    white-space: nowrap;
    width: 100%
}

.menu>:where(li)>:where(ul) :where(li) :where(ul) {
    padding-left: 1rem
}

.menu>:where(li)>:where(ul) :where(li)>:where(:not(ul)) {
    white-space: nowrap;
    width: 100%
}

.menu>:where(li)>:where(ul)>:where(li:first-child) {
    border-bottom-left-radius: unset;
    border-bottom-right-radius: unset;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit
}

.menu>:where(li)>:where(ul)>:where(li:first-child)>:where(:not(ul)) {
    border-bottom-left-radius: unset;
    border-bottom-right-radius: unset;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit
}

.menu>:where(li)>:where(ul)>:where(li:last-child) {
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit;
    border-top-left-radius: unset;
    border-top-right-radius: unset
}

.menu>:where(li)>:where(ul)>:where(li:last-child)>:where(:not(ul)) {
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit;
    border-top-left-radius: unset;
    border-top-right-radius: unset
}

.modal-open .modal-box,
.modal-toggle:checked+.modal .modal-box,
.modal:target .modal-box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.modal-action>:not([hidden])~:not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-left: calc(.5rem*(1 - var(--tw-space-x-reverse)));
    margin-right: calc(.5rem*var(--tw-space-x-reverse))
}

.table :where(th, td) {
    padding: 1rem;
    vertical-align: middle;
    white-space: nowrap
}

.table tr.active td,
.table tr.active th,
.table tr.active:nth-child(2n) td,
.table tr.active:nth-child(2n) th,
.table tr.hover:hover td,
.table tr.hover:hover th,
.table tr.hover:nth-child(2n):hover td,
.table tr.hover:nth-child(2n):hover th {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3, var(--b2))/var(--tw-bg-opacity))
}

.table:where(:not(.table-zebra)) :where(thead, tbody, tfoot) :where(tr:not(:last-child) :where(th, td)) {
    --tw-border-opacity: 1;
    border-bottom-width: 1px;
    border-color: hsl(var(--b2, var(--b1))/var(--tw-border-opacity))
}

.table :where(thead, tfoot) :where(th, td) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2, var(--b1))/var(--tw-bg-opacity));
    font-size: .75rem;
    font-weight: 700;
    line-height: 1rem;
    text-transform: uppercase
}

.table :where(tbody th, tbody td) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1)/var(--tw-bg-opacity))
}

:where(.table :first-child) :where(:first-child) :where(th, td):first-child {
    border-top-left-radius: .5rem
}

:where(.table :first-child) :where(:first-child) :where(th, td):last-child {
    border-top-right-radius: .5rem
}

:where(.table :last-child) :where(:last-child) :where(th, td):first-child {
    border-bottom-left-radius: .5rem
}

:where(.table :last-child) :where(:last-child) :where(th, td):last-child {
    border-bottom-right-radius: .5rem
}

.toast>* {
    animation: d .25s ease-out
}

@keyframes d {
    0% {
        opacity: 0;
        transform: scale(.9)
    }

    to {
        opacity: 1;
        transform: scale(1)
    }
}

.toggle:focus-visible {
    outline: 2px solid hsl(var(--bc));
    outline-offset: 2px
}

.toggle:checked,
.toggle[aria-checked=true],
.toggle[checked=true] {
    --chkbg: hsl(var(--bc));
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    box-shadow: var(--handleoffset) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset
}

[dir=rtl] .toggle:checked,
[dir=rtl] .toggle[aria-checked=true],
[dir=rtl] .toggle[checked=true] {
    box-shadow: calc(var(--handleoffset)*1) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset
}

.toggle:indeterminate {
    --chkbg: hsl(var(--bc));
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    box-shadow: calc(var(--handleoffset)/2) 0 0 2px hsl(var(--b1)) inset, calc(var(--handleoffset)/-2) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset
}

[dir=rtl] .toggle:indeterminate {
    box-shadow: calc(var(--handleoffset)/2) 0 0 2px hsl(var(--b1)) inset, calc(var(--handleoffset)/-2) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset
}

.toggle:disabled {
    --tw-bg-opacity: .2;
    background-color: hsl(var(--bc)/var(--tw-bg-opacity));
    border-color: transparent;
    cursor: not-allowed
}

:root .prose {
    --tw-prose-body: hsla(var(--bc)/.8);
    --tw-prose-headings: hsl(var(--bc));
    --tw-prose-lead: hsl(var(--bc));
    --tw-prose-links: hsl(var(--bc));
    --tw-prose-bold: hsl(var(--bc));
    --tw-prose-counters: hsl(var(--bc));
    --tw-prose-bullets: hsla(var(--bc)/.5);
    --tw-prose-hr: hsla(var(--bc)/.2);
    --tw-prose-quotes: hsl(var(--bc));
    --tw-prose-quote-borders: hsla(var(--bc)/.2);
    --tw-prose-captions: hsla(var(--bc)/.5);
    --tw-prose-code: hsl(var(--bc));
    --tw-prose-pre-code: hsl(var(--nc));
    --tw-prose-pre-bg: hsl(var(--n));
    --tw-prose-th-borders: hsla(var(--bc)/.5);
    --tw-prose-td-borders: hsla(var(--bc)/.2)
}

.prose :where(code):not(:where([class~=not-prose] *)) {
    border-radius: var(--rounded-badge);
    padding: 2px 8px
}

.prose code:after,
.prose code:before {
    content: none
}

.prose pre code {
    border-radius: 0;
    padding: 0
}

.prose :where(tbody tr, thead):not(:where([class~=not-prose] *)) {
    border-bottom-color: hsl(var(--bc)/20%)
}

.rounded-box {
    border-radius: var(--rounded-box, 1rem)
}

.btm-nav-xs>:where(.active) {
    border-top-width: 1px
}

.btm-nav-sm>:where(.active) {
    border-top-width: 2px
}

.btm-nav-md>:where(.active) {
    border-top-width: 2px
}

.btm-nav-lg>:where(.active) {
    border-top-width: 4px
}

.btn-sm {
    height: 2rem;
    min-height: 2rem;
    padding-left: .75rem;
    padding-right: .75rem
}

.btn-md,
.btn-sm {
    font-size: .875rem
}

.btn-md {
    height: 3rem;
    min-height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem
}

.btn-square:where(.btn-xs) {
    height: 1.5rem;
    padding: 0;
    width: 1.5rem
}

.btn-square:where(.btn-sm) {
    height: 2rem;
    padding: 0;
    width: 2rem
}

.btn-square:where(.btn-md) {
    height: 3rem;
    padding: 0;
    width: 3rem
}

.btn-square:where(.btn-lg) {
    height: 4rem;
    padding: 0;
    width: 4rem
}

.btn-circle:where(.btn-xs) {
    border-radius: 9999px;
    height: 1.5rem;
    padding: 0;
    width: 1.5rem
}

.btn-circle:where(.btn-sm) {
    border-radius: 9999px;
    height: 2rem;
    padding: 0;
    width: 2rem
}

.btn-circle:where(.btn-md) {
    border-radius: 9999px;
    height: 3rem;
    padding: 0;
    width: 3rem
}

.btn-circle:where(.btn-lg) {
    border-radius: 9999px;
    height: 4rem;
    padding: 0;
    width: 4rem
}

.menu-horizontal {
    display: inline-flex;
    flex-direction: row;
    width: -moz-max-content;
    width: max-content
}

.menu-horizontal :where(li) {
    flex-direction: row
}

.menu-horizontal>:where(li)>:where(ul) {
    left: auto;
    top: 100%
}

.modal-bottom {
    align-items: flex-end
}

:where(.toast) {
    --tw-translate-x: 0px;
    --tw-translate-y: 0px;
    bottom: 0;
    left: auto;
    right: 0;
    top: auto;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.toast:where(.toast-start) {
    --tw-translate-x: 0px;
    left: 0;
    right: auto;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.toast:where(.toast-center) {
    --tw-translate-x: -50%;
    left: 50%;
    right: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.toast:where(.toast-end) {
    --tw-translate-x: 0px;
    left: auto;
    right: 0;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.toast:where(.toast-bottom) {
    --tw-translate-y: 0px;
    bottom: 0;
    top: auto;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.toast:where(.toast-middle) {
    --tw-translate-y: -50%;
    bottom: auto;
    top: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.toast:where(.toast-top) {
    --tw-translate-y: 0px;
    bottom: auto;
    top: 0;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.avatar.online:before {
    background-color: hsl(var(--su)/var(--tw-bg-opacity))
}

.avatar.offline:before,
.avatar.online:before {
    --tw-bg-opacity: 1;
    border-radius: 9999px;
    box-shadow: 0 0 0 2px hsl(var(--b1));
    content: "";
    display: block;
    height: 15%;
    position: absolute;
    right: 7%;
    top: 7%;
    width: 15%;
    z-index: 2
}

.avatar.offline:before {
    background-color: hsl(var(--b3, var(--b2))/var(--tw-bg-opacity))
}

.btn-group .btn:not(:first-child):not(:last-child),
.btn-group.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-top-left-radius: 0;
    border-top-right-radius: 0
}

.btn-group .btn:first-child:not(:last-child),
.btn-group.btn-group-horizontal .btn:first-child:not(:last-child) {
    border-bottom-left-radius: var(--rounded-btn, .5rem);
    border-bottom-right-radius: 0;
    border-top-left-radius: var(--rounded-btn, .5rem);
    border-top-right-radius: 0;
    margin-left: -1px;
    margin-top: 0
}

.btn-group .btn:last-child:not(:first-child),
.btn-group.btn-group-horizontal .btn:last-child:not(:first-child) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, .5rem);
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, .5rem)
}

.btn-group.btn-group-vertical .btn:first-child:not(:last-child) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-top-left-radius: var(--rounded-btn, .5rem);
    border-top-right-radius: var(--rounded-btn, .5rem);
    margin-left: 0;
    margin-top: -1px
}

.btn-group.btn-group-vertical .btn:last-child:not(:first-child) {
    border-bottom-left-radius: var(--rounded-btn, .5rem);
    border-bottom-right-radius: var(--rounded-btn, .5rem);
    border-top-left-radius: 0;
    border-top-right-radius: 0
}

.card-compact .card-body {
    font-size: .875rem;
    line-height: 1.25rem;
    padding: 1rem
}

.card-compact .card-title {
    margin-bottom: .25rem
}

.card-normal .card-body {
    font-size: 1rem;
    line-height: 1.5rem;
    padding: var(--padding-card, 2rem)
}

.card-normal .card-title {
    margin-bottom: .75rem
}

.menu-horizontal :where(li.bordered>*) {
    border-bottom-width: 4px;
    border-left-width: 0
}

.menu-compact :where(li>*) {
    font-size: .875rem;
    line-height: 1.25rem;
    padding-bottom: .5rem;
    padding-top: .5rem
}

.menu-horizontal>:where(li:first-child) {
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: unset;
    border-top-left-radius: inherit;
    border-top-right-radius: unset
}

.menu-horizontal>:where(li:first-child)>:where(:not(ul)) {
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: unset;
    border-top-left-radius: inherit;
    border-top-right-radius: unset
}

.menu-horizontal>:where(li:last-child) {
    border-bottom-left-radius: unset;
    border-bottom-right-radius: inherit;
    border-top-left-radius: unset;
    border-top-right-radius: inherit
}

.menu-horizontal>:where(li:last-child)>:where(:not(ul)) {
    border-bottom-left-radius: unset;
    border-bottom-right-radius: inherit;
    border-top-left-radius: unset;
    border-top-right-radius: inherit
}

.modal-bottom :where(.modal-box) {
    --tw-translate-y: 2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    max-width: none;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    width: 100%
}

.modal-middle :where(.modal-box) {
    --tw-translate-y: 0px;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: var(--rounded-box, 1rem);
    max-width: 32rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    width: 91.666667%
}

.aspect-w-4 {
    --tw-aspect-w: 4;
    padding-bottom: calc(var(--tw-aspect-h)/var(--tw-aspect-w)*100%);
    position: relative
}

.aspect-w-4>* {
    bottom: 0;
    height: 100%;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: 100%
}

.aspect-h-3 {
    --tw-aspect-h: 3
}

.aspect-w-16 {
    --tw-aspect-w: 16;
    padding-bottom: calc(var(--tw-aspect-h)/var(--tw-aspect-w)*100%);
    position: relative
}

.aspect-w-16>* {
    bottom: 0;
    height: 100%;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: 100%
}

.aspect-h-9 {
    --tw-aspect-h: 9
}

.prose {
    color: var(--tw-prose-body);
    max-width: 65ch
}

.prose :where([class~=lead]):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-bottom: 1.2em;
    margin-top: 1.2em
}

.prose :where(a):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-links);
    font-weight: 500;
    text-decoration: underline
}

.prose :where(strong):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600
}

.prose :where(a strong):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(blockquote strong):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(thead th strong):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(ol):not(:where([class~=not-prose] *)) {
    list-style-type: decimal;
    margin-bottom: 1.25em;
    margin-top: 1.25em;
    padding-left: 1.625em
}

.prose :where(ol[type=A]):not(:where([class~=not-prose] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type=a]):not(:where([class~=not-prose] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type=As]):not(:where([class~=not-prose] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type=as]):not(:where([class~=not-prose] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type=I]):not(:where([class~=not-prose] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type=i]):not(:where([class~=not-prose] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type=Is]):not(:where([class~=not-prose] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type=is]):not(:where([class~=not-prose] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type="1"]):not(:where([class~=not-prose] *)) {
    list-style-type: decimal
}

.prose :where(ul):not(:where([class~=not-prose] *)) {
    list-style-type: disc;
    margin-bottom: 1.25em;
    margin-top: 1.25em;
    padding-left: 1.625em
}

.prose :where(ol>li):not(:where([class~=not-prose] *))::marker {
    color: var(--tw-prose-counters);
    font-weight: 400
}

.prose :where(ul>li):not(:where([class~=not-prose] *))::marker {
    color: var(--tw-prose-bullets)
}

.prose :where(hr):not(:where([class~=not-prose] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-bottom: 3em;
    margin-top: 3em
}

.prose :where(blockquote):not(:where([class~=not-prose] *)) {
    border-left-color: var(--tw-prose-quote-borders);
    border-left-width: .25rem;
    color: var(--tw-prose-quotes);
    font-style: italic;
    font-weight: 500;
    margin-bottom: 1.6em;
    margin-top: 1.6em;
    padding-left: 1em;
    quotes: "\201C""\201D""\2018""\2019"
}

.prose :where(blockquote p:first-of-type):not(:where([class~=not-prose] *)):before {
    content: open-quote
}

.prose :where(blockquote p:last-of-type):not(:where([class~=not-prose] *)):after {
    content: close-quote
}

.prose :where(h1):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-size: 2.25em;
    font-weight: 800;
    line-height: 1.1111111;
    margin-bottom: .8888889em;
    margin-top: 0
}

.prose :where(h1 strong):not(:where([class~=not-prose] *)) {
    color: inherit;
    font-weight: 900
}

.prose :where(h2):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-size: 1.5em;
    font-weight: 700;
    line-height: 1.3333333;
    margin-bottom: 1em;
    margin-top: 2em
}

.prose :where(h2 strong):not(:where([class~=not-prose] *)) {
    color: inherit;
    font-weight: 800
}

.prose :where(h3):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-size: 1.25em;
    font-weight: 600;
    line-height: 1.6;
    margin-bottom: .6em;
    margin-top: 1.6em
}

.prose :where(h3 strong):not(:where([class~=not-prose] *)) {
    color: inherit;
    font-weight: 700
}

.prose :where(h4):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    line-height: 1.5;
    margin-bottom: .5em;
    margin-top: 1.5em
}

.prose :where(h4 strong):not(:where([class~=not-prose] *)) {
    color: inherit;
    font-weight: 700
}

.prose :where(img):not(:where([class~=not-prose] *)) {
    margin-bottom: 2em;
    margin-top: 2em
}

.prose :where(figure>*):not(:where([class~=not-prose] *)) {
    margin-bottom: 0;
    margin-top: 0
}

.prose :where(figcaption):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-captions);
    font-size: .875em;
    line-height: 1.4285714;
    margin-top: .8571429em
}

.prose :where(code):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-code);
    font-size: .875em;
    font-weight: 600
}

.prose :where(code):not(:where([class~=not-prose] *)):before {
    content: "`"
}

.prose :where(code):not(:where([class~=not-prose] *)):after {
    content: "`"
}

.prose :where(a code):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(h1 code):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(h2 code):not(:where([class~=not-prose] *)) {
    color: inherit;
    font-size: .875em
}

.prose :where(h3 code):not(:where([class~=not-prose] *)) {
    color: inherit;
    font-size: .9em
}

.prose :where(h4 code):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(blockquote code):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(thead th code):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(pre):not(:where([class~=not-prose] *)) {
    background-color: var(--tw-prose-pre-bg);
    border-radius: .375rem;
    color: var(--tw-prose-pre-code);
    font-size: .875em;
    font-weight: 400;
    line-height: 1.7142857;
    margin-bottom: 1.7142857em;
    margin-top: 1.7142857em;
    overflow-x: auto;
    padding: .8571429em 1.1428571em
}

.prose :where(pre code):not(:where([class~=not-prose] *)) {
    background-color: transparent;
    border-radius: 0;
    border-width: 0;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    padding: 0
}

.prose :where(pre code):not(:where([class~=not-prose] *)):before {
    content: none
}

.prose :where(pre code):not(:where([class~=not-prose] *)):after {
    content: none
}

.prose :where(table):not(:where([class~=not-prose] *)) {
    font-size: .875em;
    line-height: 1.7142857;
    margin-bottom: 2em;
    margin-top: 2em;
    table-layout: auto;
    text-align: left;
    width: 100%
}

.prose :where(thead):not(:where([class~=not-prose] *)) {
    border-bottom-color: var(--tw-prose-th-borders);
    border-bottom-width: 1px
}

.prose :where(thead th):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    padding-bottom: .5714286em;
    padding-left: .5714286em;
    padding-right: .5714286em;
    vertical-align: bottom
}

.prose :where(tbody tr):not(:where([class~=not-prose] *)) {
    border-bottom-color: var(--tw-prose-td-borders);
    border-bottom-width: 1px
}

.prose :where(tbody tr:last-child):not(:where([class~=not-prose] *)) {
    border-bottom-width: 0
}

.prose :where(tbody td):not(:where([class~=not-prose] *)) {
    vertical-align: baseline
}

.prose :where(tfoot):not(:where([class~=not-prose] *)) {
    border-top-color: var(--tw-prose-th-borders);
    border-top-width: 1px
}

.prose :where(tfoot td):not(:where([class~=not-prose] *)) {
    vertical-align: top
}

.prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgba(0, 0, 0, .5);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75
}

.prose :where(p):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.25em;
    margin-top: 1.25em
}

.prose :where(video):not(:where([class~=not-prose] *)) {
    margin-bottom: 2em;
    margin-top: 2em
}

.prose :where(figure):not(:where([class~=not-prose] *)) {
    margin-bottom: 2em;
    margin-top: 2em
}

.prose :where(li):not(:where([class~=not-prose] *)) {
    margin-bottom: .5em;
    margin-top: .5em
}

.prose :where(ol>li):not(:where([class~=not-prose] *)) {
    padding-left: .375em
}

.prose :where(ul>li):not(:where([class~=not-prose] *)) {
    padding-left: .375em
}

.prose :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
    margin-bottom: .75em;
    margin-top: .75em
}

.prose :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose] *)) {
    margin-bottom: .75em;
    margin-top: .75em
}

.prose :where(hr+*):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h2+*):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h3+*):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h4+*):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(thead th:first-child):not(:where([class~=not-prose] *)) {
    padding-left: 0
}

.prose :where(thead th:last-child):not(:where([class~=not-prose] *)) {
    padding-right: 0
}

.prose :where(tbody td, tfoot td):not(:where([class~=not-prose] *)) {
    padding: .5714286em
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose] *)) {
    padding-left: 0
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose] *)) {
    padding-right: 0
}

.prose :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 0
}

.prose-sm :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
    margin-bottom: .5714286em;
    margin-top: .5714286em
}

.prose-sm :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.1428571em
}

.prose-sm :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.1428571em
}

.prose-sm :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.1428571em
}

.prose-sm :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.1428571em
}

.prose-sm :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose-sm :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 0
}

.prose-base :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
    margin-bottom: .75em;
    margin-top: .75em
}

.prose-base :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose-base :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose-base :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose-base :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose-base :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose-base :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 0
}

.prose-lg :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
    margin-bottom: .8888889em;
    margin-top: .8888889em
}

.prose-lg :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.3333333em
}

.prose-lg :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.3333333em
}

.prose-lg :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.3333333em
}

.prose-lg :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.3333333em
}

.prose-lg :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose-lg :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 0
}

.prose-xl :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
    margin-bottom: .8em;
    margin-top: .8em
}

.prose-xl :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.2em
}

.prose-xl :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.2em
}

.prose-xl :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.2em
}

.prose-xl :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.2em
}

.prose-xl :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose-xl :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 0
}

.prose-2xl :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
    margin-bottom: .8333333em;
    margin-top: .8333333em
}

.prose-2xl :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.3333333em
}

.prose-2xl :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.3333333em
}

.prose-2xl :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.3333333em
}

.prose-2xl :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.3333333em
}

.prose-2xl :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose-2xl :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 0
}

* {
    font-family: Poppins
}

a:visited {
    --tw-text-opacity: 1;
    color: hsl(var(--p)/var(--tw-text-opacity))
}

.almuna-menu>li.active,
.almuna-menu>li:hover {
    --tw-border-opacity: 1;
    --tw-text-opacity: 1;
    border-bottom-width: 1px;
    border-color: hsl(var(--s)/var(--tw-border-opacity));
    color: hsl(var(--p)/var(--tw-text-opacity));
    font-weight: 700
}

.content {
    margin-bottom: 3rem;
    margin-top: 3rem
}

.almuna-article-main {
    margin-bottom: 1.5rem;
    margin-top: 1.5rem
}

.almuna-article-main>p {
    margin-bottom: 1rem
}

.has-text-align-center {
    text-align: center
}

.has-text-align-left {
    text-align: start
}

.has-text-align-right {
    text-align: right
}

.wp-block-table {
    position: relative;
    text-align: left
}

.wp-block-table th:first-child {
    left: 0;
    position: sticky;
    position: -webkit-sticky;
    z-index: 3
}

.wp-block-table :where(th, td) {
    padding: 1rem;
    vertical-align: middle;
    white-space: nowrap
}

.wp-block-table tr.active td,
.wp-block-table tr.active th,
.wp-block-table tr.active:nth-child(2n) td,
.wp-block-table tr.active:nth-child(2n) th,
.wp-block-table tr.hover:hover td,
.wp-block-table tr.hover:hover th,
.wp-block-table tr.hover:nth-child(2n):hover td,
.wp-block-table tr.hover:nth-child(2n):hover th {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3, var(--b2))/var(--tw-bg-opacity))
}

.wp-block-table:where(:not(.table-zebra)) :where(thead, tbody, tfoot) :where(tr:not(:last-child) :where(th, td)) {
    --tw-border-opacity: 1;
    border-bottom-width: 1px;
    border-color: hsl(var(--b2, var(--b1))/var(--tw-border-opacity))
}

.wp-block-table :where(thead, tfoot) :where(th, td) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2, var(--b1))/var(--tw-bg-opacity));
    font-size: .75rem;
    font-weight: 700;
    line-height: 1rem;
    text-transform: uppercase
}

.wp-block-table :where(tbody th, tbody td) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1)/var(--tw-bg-opacity))
}

:where(.wp-block-table :first-child) :where(:first-child) :where(th, td):first-child {
    border-top-left-radius: .5rem
}

:where(.wp-block-table :first-child) :where(:first-child) :where(th, td):last-child {
    border-top-right-radius: .5rem
}

:where(.wp-block-table :last-child) :where(:last-child) :where(th, td):first-child {
    border-bottom-left-radius: .5rem
}

:where(.wp-block-table :last-child) :where(:last-child) :where(th, td):last-child {
    border-bottom-right-radius: .5rem
}

.wp-block-table {
    display: table;
    width: 100%
}

.wp-block-table>figcaption {
    display: table-caption;
    text-align: center
}

.wp-block-image {
    position: relative;
    text-align: left
}

.wp-block-image th:first-child {
    left: 0;
    position: sticky;
    position: -webkit-sticky;
    z-index: 3
}

.wp-block-image :where(th, td) {
    padding: 1rem;
    vertical-align: middle;
    white-space: nowrap
}

.wp-block-image tr.active td,
.wp-block-image tr.active th,
.wp-block-image tr.active:nth-child(2n) td,
.wp-block-image tr.active:nth-child(2n) th,
.wp-block-image tr.hover:hover td,
.wp-block-image tr.hover:hover th,
.wp-block-image tr.hover:nth-child(2n):hover td,
.wp-block-image tr.hover:nth-child(2n):hover th {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3, var(--b2))/var(--tw-bg-opacity))
}

.wp-block-image:where(:not(.table-zebra)) :where(thead, tbody, tfoot) :where(tr:not(:last-child) :where(th, td)) {
    --tw-border-opacity: 1;
    border-bottom-width: 1px;
    border-color: hsl(var(--b2, var(--b1))/var(--tw-border-opacity))
}

.wp-block-image :where(thead, tfoot) :where(th, td) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2, var(--b1))/var(--tw-bg-opacity));
    font-size: .75rem;
    font-weight: 700;
    line-height: 1rem;
    text-transform: uppercase
}

.wp-block-image :where(tbody th, tbody td) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1)/var(--tw-bg-opacity))
}

:where(.wp-block-image :first-child) :where(:first-child) :where(th, td):first-child {
    border-top-left-radius: .5rem
}

:where(.wp-block-image :first-child) :where(:first-child) :where(th, td):last-child {
    border-top-right-radius: .5rem
}

:where(.wp-block-image :last-child) :where(:last-child) :where(th, td):first-child {
    border-bottom-left-radius: .5rem
}

:where(.wp-block-image :last-child) :where(:last-child) :where(th, td):last-child {
    border-bottom-right-radius: .5rem
}

.wp-block-image {
    display: table
}

.prose>figure.alignleft,
.wp-block-image>img {
    border-radius: .75rem
}

.prose>figure.alignleft {
    display: table-caption;
    text-align: center
}

.wp-block-image.alignright {
    float: right
}

.wp-block-image.alignleft {
    float: left
}

.wp-block-image.aligncenter {
    margin-left: auto;
    margin-right: auto
}

.wp-block-image>figcaption {
    display: table-caption;
    text-align: center
}

.prose>figure {
    max-width: 100%
}

.modal.modal-search {
    --tw-bg-opacity: .9;
    background-color: rgb(0 0 0/var(--tw-bg-opacity))
}

.sidebar>li {
    padding-bottom: .5rem;
    padding-left: 1.5rem;
    padding-top: .5rem
}

.sidebar>li:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(203 213 225/var(--tw-bg-opacity))
}

.have-submenu>.submenu,
.have-submenu>.submenu>li {
    padding-left: 1.5rem
}

.have-submenu>.submenu>li {
    padding-bottom: 1rem;
    padding-top: 1rem
}

.submenu.close {
    display: none;
    height: 0
}

.have-submenu:before {
    --tw-content: "\279c";
    font-weight: 700
}

.have-submenu:before,
.wrapper-title:before {
    content: var(--tw-content);
    margin-right: .5rem
}

.wrapper-title:before {
    --tw-bg-opacity: 1;
    --tw-content: "";
    background-color: hsl(var(--s)/var(--tw-bg-opacity));
    outline-width: 2px;
    padding-left: 1rem;
    padding-right: 1rem
}

.fixed {
    position: fixed
}

.top-0 {
    top: 0
}

.top-40 {
    top: 10rem
}

.z-20 {
    z-index: 4
}

.z-40 {
    z-index: 5
}

.col-span-1 {
    grid-column: span 1/span 1
}

.m-1 {
    margin: .25rem
}

.m-2 {
    margin: .5rem
}

.mx-auto {
    margin-left: auto;
    margin-right: auto
}

.my-10 {
    margin-bottom: 2.5rem;
    margin-top: 2.5rem
}



.mb-4 {
    margin-bottom: 1rem
}

.mb-2 {
    margin-bottom: .5rem
}

.mt-2 {
    margin-top: .5rem
}

.mt-4 {
    margin-top: 1rem
}

.mt-6 {
    margin-top: 1.5rem
}

.mb-32 {
    margin-bottom: 8rem
}

.mt-3 {
    margin-top: .75rem
}

.ml-4 {
    margin-left: 1rem
}

.mr-2 {
    margin-right: .5rem
}

.inline-block {
    display: inline-block
}

.flex {
    display: flex
}

.table {
    display: table
}

.grid {
    display: grid
}

.hidden {
    display: none
}

.h-6 {
    height: 1.5rem
}

.h-5 {
    height: 1.25rem
}

.h-\[120px\] {
    height: 120px
}

.h-auto {
    height: auto
}

.h-4 {
    height: 1rem
}

.h-3 {
    height: .75rem
}

.min-h-full {
    min-height: 100%
}

.w-auto {
    width: auto
}

.w-full {
    width: 100%
}

.w-6 {
    width: 1.5rem
}

.w-52 {
    width: 13rem
}

.w-5 {
    width: 1.25rem
}

.w-\[120px\] {
    width: 120px
}

.w-8 {
    width: 2rem
}

.w-4 {
    width: 1rem
}

.w-3 {
    width: .75rem
}

.max-w-2xl {
    max-width: 42rem
}

.max-w-3xl {
    max-width: 48rem
}

.max-w-none {
    max-width: none
}

.flex-none {
    flex: none
}

.cursor-pointer {
    cursor: pointer
}

.grid-flow-row {
    grid-auto-flow: row
}

.grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr))
}

.grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr))
}

.grid-rows-1 {
    grid-template-rows: repeat(1, minmax(0, 1fr))
}

.flex-row {
    flex-direction: row
}

.flex-col {
    flex-direction: column
}

.flex-wrap {
    flex-wrap: wrap
}

.place-items-start {
    place-items: start
}

.items-center {
    align-items: center
}

.justify-end {
    justify-content: flex-end
}

.justify-center {
    justify-content: center
}

.justify-between {
    justify-content: space-between
}

.gap-4 {
    gap: 1rem
}

.gap-6 {
    gap: 1.5rem
}

.gap-2 {
    gap: .5rem
}

.gap-3 {
    gap: .75rem
}

.gap-10 {
    gap: 2.5rem
}

.place-self-center {
    place-self: center
}

.overflow-y-auto {
    overflow-y: auto
}

.break-words {
    overflow-wrap: break-word
}

.break-all {
    word-break: break-all
}

.rounded-none {
    border-radius: 0
}

.rounded-xl {
    border-radius: .75rem
}

.rounded {
    border-radius: .25rem
}

.rounded-lg {
    border-radius: .5rem
}

.border-2 {
    border-width: 2px
}

.border-none {
    border-style: none
}

.border-primary {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p)/var(--tw-border-opacity))
}

.bg-base-hero {
    background-color: rgb(249 255 253/var(--tw-bg-opacity))
}

.bg-base-hero,
.bg-white {
    --tw-bg-opacity: 1
}

.bg-white {
    background-color: rgb(255 255 255/var(--tw-bg-opacity))
}

.bg-base-100 {
    background-color: hsl(var(--b1)/var(--tw-bg-opacity))
}

.bg-base-100,
.bg-primary {
    --tw-bg-opacity: 1
}

.bg-primary {
    background-color: hsl(var(--p)/var(--tw-bg-opacity))
}

.bg-transparent {
    background-color: transparent
}

.bg-gray-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(229 231 235/var(--tw-bg-opacity))
}

.bg-center {
    background-position: 50%
}

.fill-current {
    fill: currentColor
}

.fill-gray-500 {
    fill: #6b7280
}

.fill-primary {
    fill: hsl(var(--p))
}

.fill-blue-700 {
    fill: #1d4ed8
}

.fill-sky-400 {
    fill: #38bdf8
}

.stroke-current {
    stroke: currentColor
}

.object-cover {
    -o-object-fit: cover;
    object-fit: cover
}

.p-0 {
    padding: 0
}

.p-2 {
    padding: .5rem
}

.p-12 {
    padding: 3rem
}

.p-1 {
    padding: .25rem
}

.p-5 {
    padding: 1.25rem
}

.px-10 {
    padding-left: 2rem;
    padding-right: 2.5rem
}

.py-16 {
    padding-bottom: 1.3rem;
    padding-top: 15rem
}

.px-8 {
    padding-left: 2rem;
    padding-right: 2rem
}

.py-10 {
    padding-bottom: 2.5rem;
    padding-top: 2.5rem
}

.px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem
}

.px-3 {
    padding-left: .75rem;
    padding-right: .75rem
}

.py-2 {
    padding-bottom: .5rem;
    padding-top: .5rem
}

.px-2 {
    padding-left: .5rem;
    padding-right: .5rem
}

.py-3 {
    padding-bottom: .75rem;
    padding-top: .75rem
}

.px-4 {
    padding-left: 1rem;
    padding-right: 1rem
}

.pt-10 {
    padding-top: 2.5rem
}

.pb-4 {
    padding-bottom: 1rem
}

.pr-3 {
    padding-right: .75rem
}

.pt-24 {
    padding-top: 6rem
}

.text-center {
    text-align: center
}

.font-\[\'Poppins\'\] {
    font-family: Poppins
}

.text-2xl {
    font-size: 1.5rem;
    line-height: 2rem
}

.text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem
}

.text-base {
    font-size: 1rem;
    line-height: 1.5rem
}

.text-sm {
    font-size: .875rem;
    line-height: 1.25rem
}

.text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem
}

.text-xs {
    font-size: .75rem;
    line-height: 1rem
}

.font-black {
    font-weight: 900
}

.font-bold {
    font-weight: 700
}

.font-medium {
    font-weight: 500
}

.font-semibold {
    font-weight: 600
}

.normal-case {
    text-transform: none
}

.leading-normal {
    line-height: 1.5
}

.leading-loose {
    line-height: 2
}

.tracking-wider {
    letter-spacing: .05em
}

.text-neutral-content {
    --tw-text-opacity: 1;
    color: hsl(var(--nc)/var(--tw-text-opacity))
}

.text-primary {
    --tw-text-opacity: 1;
    color: hsl(var(--p)/var(--tw-text-opacity))
}

.text-secondary {
    --tw-text-opacity: 1;
    color: hsl(var(--s)/var(--tw-text-opacity))
}

.text-gray-600 {
    --tw-text-opacity: 1;
    color: rgb(75 85 99/var(--tw-text-opacity))
}

.text-gray-500 {
    --tw-text-opacity: 1;
    color: rgb(107 114 128/var(--tw-text-opacity))
}

.text-base-content {
    --tw-text-opacity: 1;
    color: hsl(var(--bc)/var(--tw-text-opacity))
}

.text-white {
    color: rgb(255 255 255/var(--tw-text-opacity))
}

.text-white,
.text-zinc-700 {
    --tw-text-opacity: 1
}

.text-zinc-700 {
    color: rgb(63 63 70/var(--tw-text-opacity))
}

.text-zinc-500 {
    --tw-text-opacity: 1;
    color: rgb(113 113 122/var(--tw-text-opacity))
}

.text-red-500 {
    --tw-text-opacity: 1;
    color: rgb(239 68 68/var(--tw-text-opacity))
}

.text-opacity-50 {
    --tw-text-opacity: .5
}

.underline {
    text-decoration-line: underline
}

.shadow {
    --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, .1), 0 1px 2px -1px rgba(0, 0, 0, .1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color)
}

.shadow,
.shadow-2xl {
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.shadow-2xl {
    --tw-shadow: 0 25px 50px -12px rgba(0, 0, 0, .25);
    --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color)
}

.shadow-blue-200 {
    --tw-shadow-color: #bfdbfe;
    --tw-shadow: var(--tw-shadow-colored)
}

.drop-shadow-md {
    --tw-drop-shadow: drop-shadow(0 4px 3px rgba(0, 0, 0, .07)) drop-shadow(0 2px 2px rgba(0, 0, 0, .06))
}

.drop-shadow-md,
.filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.almaruf-overlay {
    background: linear-gradient(180deg, #f9fffd, rgba(249, 255, 253, .57) 26.21%, #f9fffd)
}

.almaruf1-overlay {
    background: linear-gradient(180deg, #f9fffd, rgb(249 255 253 / 0%) 26.21%, #f9fffd00)
}



.wp-block-image>figcaption,
.wp-block-table>figcaption {
    caption-side: bottom
}

@media only screen and (max-width:600px) {
    .prose>figure.alignleft {
        max-width: 100% !important;
        width: 100% !important
    }
}

.no-scrollbar::-webkit-scrollbar {
    display: none
}

.no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none
}

#body-overlay {
    background: rgba(0, 0, 0, .5);
    display: none;
    height: 100vh;
    overflow: hidden;
    position: fixed;
    top: 0;
    width: 100vw;
    z-index: 5
}

.real-menu {
    background-color: #fff;
    box-sizing: border-box;
    height: 100%;
    left: -300px;
    position: fixed;
    top: 0;
    transition: all .2s ease;
    width: 300px;
    z-index: 6
}

.sidebar-base.menu-open #body-overlay {
    display: block
}

.sidebar-base.menu-open .real-menu {
    left: 0
}

.visited\:text-white:visited {
    color: #fff
}

.visited\:text-primary:visited {
    color: hsl(var(--p))
}

.hover\:border-secondary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--s)/var(--tw-border-opacity))
}

.hover\:bg-secondary:hover {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--s)/var(--tw-bg-opacity))
}

.hover\:bg-primary:hover {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p)/var(--tw-bg-opacity))
}

.hover\:bg-gray-300:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(209 213 219/var(--tw-bg-opacity))
}

.hover\:text-white:hover {
    --tw-text-opacity: 1;
    color: rgb(255 255 255/var(--tw-text-opacity))
}

.hover\:text-gray-600:hover {
    --tw-text-opacity: 1;
    color: rgb(75 85 99/var(--tw-text-opacity))
}

@media(prefers-color-scheme:dark) {
    .dark\:bg-gray-700 {
        --tw-bg-opacity: 1;
        background-color: rgb(55 65 81/var(--tw-bg-opacity))
    }

    .dark\:text-white {
        color: rgb(255 255 255/var(--tw-text-opacity))
    }

    .dark\:text-gray-300,
    .dark\:text-white {
        --tw-text-opacity: 1
    }

    .dark\:text-gray-300 {
        color: rgb(209 213 219/var(--tw-text-opacity))
    }

    .dark\:text-gray-400 {
        --tw-text-opacity: 1;
        color: rgb(156 163 175/var(--tw-text-opacity))
    }

    .dark\:hover\:bg-gray-600:hover {
        --tw-bg-opacity: 1;
        background-color: rgb(75 85 99/var(--tw-bg-opacity))
    }

    .dark\:hover\:text-gray-300:hover {
        --tw-text-opacity: 1;
        color: rgb(209 213 219/var(--tw-text-opacity))
    }
}

@media(min-width:640px) {
    .sm\:modal-middle {
        align-items: center
    }

    .sm\:modal-middle :where(.modal-box) {
        --tw-translate-y: 0px;
        --tw-scale-x: .9;
        --tw-scale-y: .9;
        border-bottom-left-radius: var(--rounded-box, 1rem);
        border-bottom-right-radius: var(--rounded-box, 1rem);
        max-width: 32rem;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
        width: 91.666667%
    }

    .sm\:h-4 {
        height: 1rem
    }

    .sm\:w-4 {
        width: 1rem
    }

    .sm\:text-sm {
        font-size: .875rem;
        line-height: 1.25rem
    }
}

@media(min-width:768px) {
    .md\:btn-md {
        font-size: .875rem;
        min-height: 3rem;
        padding-left: 1rem;
        padding-right: 1rem
    }

    .md\:btn-md {
        height: 3rem
    }

    .md\:prose-lg {
        font-size: 1.125rem;
        line-height: 1.7777778
    }

    .md\:prose-lg :where(p):not(:where([class~=not-prose] *)) {
        margin-bottom: 1.3333333em;
        margin-top: 1.3333333em
    }

    .md\:prose-lg :where([class~=lead]):not(:where([class~=not-prose] *)) {
        font-size: 1.2222222em;
        line-height: 1.4545455;
        margin-bottom: 1.0909091em;
        margin-top: 1.0909091em
    }

    .md\:prose-lg :where(blockquote):not(:where([class~=not-prose] *)) {
        margin-bottom: 1.6666667em;
        margin-top: 1.6666667em;
        padding-left: 1em
    }

    .md\:prose-lg :where(h1):not(:where([class~=not-prose] *)) {
        font-size: 2.6666667em;
        line-height: 1;
        margin-bottom: .8333333em;
        margin-top: 0
    }

    .md\:prose-lg :where(h2):not(:where([class~=not-prose] *)) {
        font-size: 1.6666667em;
        line-height: 1.3333333;
        margin-bottom: 1.0666667em;
        margin-top: 1.8666667em
    }

    .md\:prose-lg :where(h3):not(:where([class~=not-prose] *)) {
        font-size: 1.3333333em;
        line-height: 1.5;
        margin-bottom: .6666667em;
        margin-top: 1.6666667em
    }

    .md\:prose-lg :where(h4):not(:where([class~=not-prose] *)) {
        line-height: 1.5555556;
        margin-bottom: .4444444em;
        margin-top: 1.7777778em
    }

    .md\:prose-lg :where(img):not(:where([class~=not-prose] *)) {
        margin-bottom: 1.7777778em;
        margin-top: 1.7777778em
    }

    .md\:prose-lg :where(video):not(:where([class~=not-prose] *)) {
        margin-bottom: 1.7777778em;
        margin-top: 1.7777778em
    }

    .md\:prose-lg :where(figure):not(:where([class~=not-prose] *)) {
        margin-bottom: 1.7777778em;
        margin-top: 1.7777778em
    }

    .md\:prose-lg :where(figure>*):not(:where([class~=not-prose] *)) {
        margin-bottom: 0;
        margin-top: 0
    }

    .md\:prose-lg :where(figcaption):not(:where([class~=not-prose] *)) {
        font-size: .8888889em;
        line-height: 1.5;
        margin-top: 1em
    }

    .md\:prose-lg :where(code):not(:where([class~=not-prose] *)) {
        font-size: .8888889em
    }

    .md\:prose-lg :where(h2 code):not(:where([class~=not-prose] *)) {
        font-size: .8666667em
    }

    .md\:prose-lg :where(h3 code):not(:where([class~=not-prose] *)) {
        font-size: .875em
    }

    .md\:prose-lg :where(pre):not(:where([class~=not-prose] *)) {
        border-radius: .375rem;
        font-size: .8888889em;
        line-height: 1.75;
        margin-bottom: 2em;
        margin-top: 2em;
        padding: 1em 1.5em
    }

    .md\:prose-lg :where(ol):not(:where([class~=not-prose] *)) {
        margin-bottom: 1.3333333em;
        margin-top: 1.3333333em;
        padding-left: 1.5555556em
    }

    .md\:prose-lg :where(ul):not(:where([class~=not-prose] *)) {
        margin-bottom: 1.3333333em;
        margin-top: 1.3333333em;
        padding-left: 1.5555556em
    }

    .md\:prose-lg :where(li):not(:where([class~=not-prose] *)) {
        margin-bottom: .6666667em;
        margin-top: .6666667em
    }

    .md\:prose-lg :where(ol>li):not(:where([class~=not-prose] *)) {
        padding-left: .4444444em
    }

    .md\:prose-lg :where(ul>li):not(:where([class~=not-prose] *)) {
        padding-left: .4444444em
    }

    .md\:prose-lg :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
        margin-bottom: .8888889em;
        margin-top: .8888889em
    }

    .md\:prose-lg :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
        margin-top: 1.3333333em
    }

    .md\:prose-lg :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
        margin-bottom: 1.3333333em
    }

    .md\:prose-lg :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
        margin-top: 1.3333333em
    }

    .md\:prose-lg :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
        margin-bottom: 1.3333333em
    }

    .md\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose] *)) {
        margin-bottom: .8888889em;
        margin-top: .8888889em
    }

    .md\:prose-lg :where(hr):not(:where([class~=not-prose] *)) {
        margin-bottom: 3.1111111em;
        margin-top: 3.1111111em
    }

    .md\:prose-lg :where(hr+*):not(:where([class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(h2+*):not(:where([class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(h3+*):not(:where([class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(h4+*):not(:where([class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(table):not(:where([class~=not-prose] *)) {
        font-size: .8888889em;
        line-height: 1.5
    }

    .md\:prose-lg :where(thead th):not(:where([class~=not-prose] *)) {
        padding-bottom: .75em;
        padding-left: .75em;
        padding-right: .75em
    }

    .md\:prose-lg :where(thead th:first-child):not(:where([class~=not-prose] *)) {
        padding-left: 0
    }

    .md\:prose-lg :where(thead th:last-child):not(:where([class~=not-prose] *)) {
        padding-right: 0
    }

    .md\:prose-lg :where(tbody td, tfoot td):not(:where([class~=not-prose] *)) {
        padding: .75em
    }

    .md\:prose-lg :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose] *)) {
        padding-left: 0
    }

    .md\:prose-lg :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose] *)) {
        padding-right: 0
    }

    .md\:prose-lg :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
        margin-bottom: 0
    }

    .md\:col-span-1 {
        grid-column: span 1/span 1
    }

    .md\:col-span-2 {
        grid-column: span 2/span 2
    }

    .md\:my-8 {
        margin-bottom: 9rem;
        margin-top: 15rem
    }

    .md\:mx-24 {
        margin-left: 6rem;
        margin-right: 6rem
    }

    .md\:flex {
        display: flex
    }

    .md\:grid {
        display: grid
    }

    .md\:w-auto {
        width: auto
    }

    .md\:w-12 {
        width: 3rem
    }

    .md\:max-w-md {
        max-width: 28rem
    }

    .md\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr))
    }

    .md\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr))
    }

    .md\:grid-cols-5 {
        grid-template-columns: repeat(5, minmax(0, 1fr))
    }

    .md\:grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr))
    }

    .md\:flex-row {
        flex-direction: row
    }

    .md\:items-start {
        align-items: flex-start
    }

    .md\:justify-start {
        justify-content: flex-start
    }

    .md\:gap-16 {
        gap: 4rem
    }

    .md\:rounded-lg {
        border-radius: .5rem
    }

    .md\:bg-gray-50 {
        --tw-bg-opacity: 1;
        background-color: rgb(249 250 251/var(--tw-bg-opacity))
    }

    .md\:p-4 {
        padding: 1rem
    }

    .md\:py-36 {
        padding-bottom: 0.1rem;
        padding-top: 16rem
    }

    .md\:px-48 {
        padding-left: 12rem;
        padding-right: 12rem
    }

    .md\:px-28 {
        padding-left: 7rem;
        padding-right: 7rem
    }

    .md\:py-10 {
        padding-bottom: 2.5rem;
        padding-top: 2.5rem
    }

    .md\:pt-28 {
        padding-top: 7rem
    }

    .md\:text-start {
        text-align: start
    }

    .md\:text-4xl {
        font-size: 2.25rem;
        line-height: 2.5rem
    }

    .md\:text-lg {
        font-size: 1.125rem;
        line-height: 1.75rem
    }

    .md\:text-3xl {
        font-size: 1.875rem;
        line-height: 2.25rem
    }

    .md\:text-sm {
        font-size: .875rem;
        line-height: 1.25rem
    }

    .md\:leading-relaxed {
        line-height: 1.625
    }

    .md\:drop-shadow-lg {
        --tw-drop-shadow: drop-shadow(0 10px 8px rgba(0, 0, 0, .04)) drop-shadow(0 4px 3px rgba(0, 0, 0, .1));
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
    }
}

@media(min-width:1024px) {
    .lg\:col-span-3 {
        grid-column: span 3/span 3
    }

    .lg\:col-span-9 {
        grid-column: span 9/span 9
    }

    .lg\:col-span-2 {
        grid-column: span 2/span 2
    }

    .lg\:col-span-8 {
        grid-column: span 8/span 8
    }

    .lg\:col-span-4 {
        grid-column: span 4/span 4
    }

    .lg\:block {
        display: block
    }

    .lg\:flex {
        display: flex
    }

    .lg\:hidden {
        display: none
    }

    .lg\:grid-cols-4 {
        grid-template-columns: repeat(4, minmax(0, 1fr))
    }

    .lg\:grid-cols-12 {
        grid-template-columns: repeat(12, minmax(0, 1fr))
    }

    .lg\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr))
    }

    .lg\:grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr))
    }

    .lg\:flex-col {
        flex-direction: column
    }

    .lg\:gap-3 {
        gap: .75rem
    }

    .lg\:px-32 {
        padding-left: 8rem;
        padding-right: 8rem
    }

    .lg\:px-8 {
        padding-left: 2rem;
        padding-right: 2rem
    }

    .lg\:text-left {
        text-align: left
    }

    .lg\:leading-relaxed {
        line-height: 1.625
    }
}

@media(min-width:1280px) {
    .xl\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr))
    }

    .xl\:px-32 {
        padding-left: 8rem;
        padding-right: 8rem
    }
}

@media(min-width:1536px) {
    .\32xl\:px-48 {
        padding-left: 12rem;
        padding-right: 12rem
    }
}

.fadein {
    font-family: Arial;
    font-size: 60px;
    animation: fadeIn 5s;
    -webkit-animation: fadeIn 5s;
    -moz-animation: fadeIn 5s;
    -o-animation: fadeIn 5s;
    -ms-animation: fadeIn 5s;
  }
  
  @keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }
  
  @-moz-keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }
  
  @-webkit-keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }
  
  @-o-keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }
  
  @-ms-keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }